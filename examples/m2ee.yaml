#
# ~/.m2ee/m2ee.yaml
# user/application specific configuration
#
# All non-essential configuration settings have been omitted in this example
# file. Refer to the full-documented-m2ee.yaml in the examples directory for a
# full list of available options and explanation about them.
#
m2ee:
 app_name: My Project Name
 app_base: /path/to/project/directory
 # m2ee http admin interface and password
 admin_port: 9000
 admin_pass: password
 # mxruntime web interface port
 runtime_port: 8000
 # set to * if you want to have the public runtime port accessible from other
 # hosts than localhost (Mendix >= 4.3.0)
 #runtime_listen_addresses: "*"
 # custom java options, like -Xmx256m or -Djava.foo=bar
 javaopts: [
   "-Dfile.encoding=UTF-8", "-XX:MaxPermSize=128M", "-Xmx512M", "-Xms512M",
   "-Djava.io.tmpdir=/path/to/project/directory/data/tmp",
 ]
 # file which will be read back by the m2ee log command to provide live logging
 # info this is *not* a file m2ee-tools is going to write to, it is a hint
 # about where to find the log which is written by the mendix application
 logfile: /path/to/your/favorite/logfile

metering:
 # usage_metrics_page_size specifies how many usage records should be processed
 # in a page during the export_usage_metrics command. If not set then no pagination
 # would be done during export_usage_metrics which would increase the memory consumption.
 # Also if a very small page size is set it would increase the time taken to complete
 # export_usage_metrics
 usage_metrics_page_size: 50000
 # usage metrics will be exported to this file appended with the time as milliseconds since epoch
 usage_metrics_output_file_name: "mendix_usage_metrics"
 # [optional] usage metrics file will be created in this path if it's specified or in the
 # m2ee-tools root directory otherwise
 usage_metrics_output_file_path: /path/to/your/output/directory
 # usage metrics will be exported to the Subscription Service via this endpoint (instead of export to 
 # local file) in case of your app is connected to the Internet
 usage_metrics_subscription_service_uri: https://subscription-service-api-endpoint/activate #FIXME: replace with correct url when we have one
 # timeout for Subscription Service in seconds (default is 30 sec)
 usage_metrics_subscription_service_timeout: 30
 # [optional] If your app uses specializations of the 'System.User' entity to store users, use this variable 
 # to point to the them. This enables us to identify internal and external users of your app and 
 # add them to the usage report during the export_usage_metrics command execution. 
 # The value of this variable is in the format 'Module.Entity.Attribute', where 'Module' is the 
 # module of your app which contains the 'Entity' that is a specialization of 'System.User' and 
 # 'Attribute' is the attribute that contains the email address of the user. If you have multiple 
 # specializations of 'System.User', you can specify the values in comma-separated format. 
 # That is 'Module1.Entity1.Attribute1,Module2.Entity2.Attribute2,â€¦,ModuleN.EntityN.AttributeN'. 
 # In the following example there are two specializations identified: 
 # "Administration.Account.Email,MendixSSO.MendixSSOUser.EmailAddress"
 # Define your own specializations of the 'System.User' entity to store users if needed, uncomment 
 # next line and set this variable to specializations that you defined to use this functionality:
 #usage_metrics_email_fields: Module1.Entity1.Attribute1, Module2.Entity2.Attribute2

logging:
 - # example of file logging by the platform itself
   name: FileSubscriber
   type: file
   autosubscribe: INFO
   filename: /path/to/your/favorite/logfile
   max_size: 10485760 # bytes(!!)
   max_rotation: 7
mxruntime:
 # Database login credentials
 DatabaseType: PostgreSQL
 # The DatabaseHost contains the database hostname and optionally, also the TCP
 # port number.  It's possible to use a plain IPv6 address by enclosing it in
 # brackets, like: "[::1]:5432"
 DatabaseHost: "127.0.0.1:5432"
 DatabaseName: database
 DatabaseUserName: username
 DatabasePassword: password

 MicroflowConstants:
  # put microflow constants in here
  Module.Constant: text
  AnotherModule.AnotherConstant: bla

 # ScheduledEventExecution can be set to ALL, NONE (default) or SPECIFIED
 ScheduledEventExecution: NONE
 # When using ScheduledEventExecution SPECIFIED, provide a list of actions to
 # enable:
 MyScheduledEvents:
  - Module1.Event1
  - Module2.Event2
  - Module3.Event3
